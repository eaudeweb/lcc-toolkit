# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-27 11:01
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "iso",
                    models.CharField(
                        max_length=3,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ISO",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Name")),
            ],
            options={
                "db_table": "country",
                "verbose_name_plural": "Countries",
                "verbose_name": "Country",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Legislation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("sq", "Albanian"),
                            ("hy", "Armenian"),
                            ("az-az", "Azeri"),
                            ("be-by", "Belarusian"),
                            ("bs-ba", "Bosnian"),
                            ("bg", "Bulgaria"),
                            ("ca", "Catalan"),
                            ("hr-hr", "Croatian"),
                            ("cs", "Czech"),
                            ("da-dk", "Danish"),
                            ("nl", "Dutch"),
                            ("et", "Estonian"),
                            ("fi", "Finnish"),
                            ("fr", "French"),
                            ("ka", "Georgian"),
                            ("de-lu", "German"),
                            ("el-gr", "Greek"),
                            ("hu", "Hungarian"),
                            ("is", "Icelandic"),
                            ("it-ch", "Italian"),
                            ("it-it", "Italian"),
                            ("kk", "Kazakh"),
                            ("ky", "Kyrgyz"),
                            ("lv", "Latvian"),
                            ("lt", "Lithuanian"),
                            ("mk", "Macedonian"),
                            ("mt", "Maltese"),
                            ("md", "Moldavian"),
                            ("sr", "Montenegrin"),
                            ("no", "Norwegian"),
                            ("pl", "Polish"),
                            ("pt-pt", "Portuguese"),
                            ("ro", "Romanian"),
                            ("ru", "Russian"),
                            ("se-se", "Sami"),
                            ("sr", "Serbian"),
                            ("sk", "Slovak"),
                            ("sl", "Slovenian"),
                            ("es-es", "Spanish"),
                            ("tg", "Tajik"),
                            ("tr", "Turkish"),
                            ("tk", "Turkmen"),
                            ("uk", "Ukrainian"),
                            ("uz", "Uzbek"),
                        ],
                        default=("en", "English"),
                        max_length=64,
                    ),
                ),
                (
                    "law_type",
                    models.CharField(
                        choices=[
                            ("Constitution", "Constitution"),
                            ("Legislation", "Legislation"),
                            ("Miscellaneous", "Miscellaneous"),
                            ("Regulation", "Regulation"),
                            ("Unknown", "Unknown"),
                        ],
                        default=("Constitution", "Constitution"),
                        max_length=64,
                    ),
                ),
                ("year", models.IntegerField(default=2017)),
                (
                    "year_mention",
                    models.CharField(blank=True, max_length=1024, null=True),
                ),
                ("pdf_file", models.FileField(null=True, upload_to="")),
                ("pdf_file_name", models.CharField(max_length=256, null=True)),
                ("title", models.CharField(max_length=256)),
                ("abstract", models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name="LegislationArticle",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.CharField(max_length=65535)),
                ("legislation_page", models.IntegerField()),
                ("code", models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name="LegislationPage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("page_text", models.CharField(max_length=65535)),
                ("page_number", models.IntegerField()),
                (
                    "legislation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="page",
                        to="lcc.Legislation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaxonomyClassification",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("code", models.CharField(blank=True, max_length=16, unique=True)),
                ("lft", models.PositiveIntegerField(db_index=True, editable=False)),
                ("rght", models.PositiveIntegerField(db_index=True, editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(db_index=True, editable=False)),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="lcc.TaxonomyClassification",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Taxonomy Classifications",
                "verbose_name": "Taxonomy Classification",
                "ordering": ("code",),
            },
        ),
        migrations.CreateModel(
            name="TaxonomyTag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="TaxonomyTagGroup",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("countries", models.ManyToManyField(to="lcc.Country")),
                (
                    "home_country",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="home_country",
                        to="lcc.Country",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "affiliation",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Institutional affiliation",
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Position"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="taxonomytag",
            name="group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tags",
                to="lcc.TaxonomyTagGroup",
            ),
        ),
        migrations.AddField(
            model_name="legislationarticle",
            name="classifications",
            field=models.ManyToManyField(to="lcc.TaxonomyClassification"),
        ),
        migrations.AddField(
            model_name="legislationarticle",
            name="legislation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="articles",
                to="lcc.Legislation",
            ),
        ),
        migrations.AddField(
            model_name="legislationarticle",
            name="tags",
            field=models.ManyToManyField(to="lcc.TaxonomyTag"),
        ),
        migrations.AddField(
            model_name="legislation",
            name="classifications",
            field=models.ManyToManyField(blank=True, to="lcc.TaxonomyClassification"),
        ),
        migrations.AddField(
            model_name="legislation",
            name="country",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="lcc.Country"
            ),
        ),
        migrations.AddField(
            model_name="legislation",
            name="tags",
            field=models.ManyToManyField(blank=True, to="lcc.TaxonomyTag"),
        ),
        migrations.AddField(
            model_name="legislation",
            name="geo_coverage",
            field=models.CharField(
                choices=[
                    ("nat", "National"),
                    ("int-reg", "International/regional"),
                    ("st-pr", "State/province"),
                    ("city-mun", "City/municipality"),
                    ("oth", "Other"),
                ],
                default=("nat", "National"),
                max_length=64,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="legislation",
            name="source",
            field=models.CharField(blank=True, max_length=256, null=True),
        ),
        migrations.AddField(
            model_name="legislation",
            name="source_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("official", "Official"),
                    ("unofficial", "Unofficial"),
                    ("", "----"),
                ],
                default=("official", "Official"),
                max_length=64,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="legislation",
            name="website",
            field=models.URLField(blank=True, max_length=2000, null=True),
        ),
        migrations.AddField(
            model_name="legislation",
            name="year_amendment",
            field=models.IntegerField(blank=True, default=None, null=True),
        ),
        migrations.AlterField(
            model_name="legislation",
            name="language",
            field=models.CharField(
                choices=[
                    ("en", "English"),
                    ("ar", "Arabic"),
                    ("zh", "Chinese"),
                    ("fr", "French"),
                    ("ru", "Russian"),
                    ("es-es", "Spanish"),
                    ("oth", "Other"),
                ],
                default=("en", "English"),
                max_length=64,
            ),
        ),
        migrations.AlterField(
            model_name="legislation",
            name="law_type",
            field=models.CharField(
                choices=[
                    ("Constitution", "Constitution"),
                    ("Law", "Law"),
                    ("Regulation", "Regulation"),
                    ("oth", "Other"),
                ],
                default=("Constitution", "Constitution"),
                max_length=64,
            ),
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name="Assessment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="lcc.Country"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.CharField(max_length=1024)),
                ("parent_answer", models.NullBooleanField(default=None)),
                ("order", models.IntegerField(blank=True)),
                ("gap_on", models.NullBooleanField(default=None)),
                ("lft", models.PositiveIntegerField(db_index=True, editable=False)),
                ("rght", models.PositiveIntegerField(db_index=True, editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(db_index=True, editable=False)),
                (
                    "classification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="lcc.TaxonomyClassification",
                    ),
                ),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="lcc.Question",
                    ),
                ),
                ("tags", models.ManyToManyField(to="lcc.TaxonomyTag")),
            ],
            options={
                "verbose_name_plural": "Questions",
                "verbose_name": "Question",
            },
        ),
        migrations.AddField(
            model_name="answer",
            name="assessment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="lcc.Assessment"
            ),
        ),
        migrations.AddField(
            model_name="answer",
            name="question",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="lcc.Question"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="assessment",
            unique_together=set([("user", "country")]),
        ),
        migrations.AlterUniqueTogether(
            name="answer",
            unique_together=set([("question", "assessment")]),
        ),
        migrations.AlterField(
            model_name="assessment",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assessment",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="legislation",
            name="abstract",
            field=models.CharField(blank=True, max_length=1024, null=True),
        ),
        migrations.AlterField(
            model_name="legislation",
            name="law_type",
            field=models.CharField(
                choices=[
                    ("Law", "Law"),
                    ("Constitution", "Constitution"),
                    ("Regulation", "Regulation"),
                    ("oth", "Other"),
                ],
                default=("Law", "Law"),
                max_length=64,
            ),
        ),
        migrations.CreateModel(
            name="CountryMetadata",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cw", models.BooleanField(default=False, verbose_name="CW")),
                (
                    "small_cw",
                    models.BooleanField(default=False, verbose_name="Small CW"),
                ),
                ("un", models.BooleanField(default=False, verbose_name="UN")),
                ("ldc", models.BooleanField(default=False, verbose_name="LDC")),
                ("lldc", models.BooleanField(default=False, verbose_name="LLDC")),
                ("sid", models.BooleanField(default=False, verbose_name="SID")),
                (
                    "population",
                    models.FloatField(
                        null=True, verbose_name="Population ('000s) 2018"
                    ),
                ),
                ("hdi2015", models.FloatField(null=True, verbose_name="HDI2015")),
                (
                    "gdp_capita",
                    models.FloatField(
                        null=True, verbose_name="GDP per capita, US$ 2016"
                    ),
                ),
                (
                    "ghg_no_lucf",
                    models.FloatField(
                        null=True,
                        verbose_name="Total GHG Emissions excluding LUCF MtCO2e 2014",
                    ),
                ),
                (
                    "ghg_lucf",
                    models.FloatField(
                        null=True,
                        verbose_name="Total GHG Emissions including LUCF MtCO2e 2014",
                    ),
                ),
                (
                    "cvi2015",
                    models.FloatField(
                        null=True, verbose_name="Climate vulnerability index 2015"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FocusArea",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
            ],
        ),
        migrations.CreateModel(
            name="LegalSystem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Name")),
            ],
        ),
        migrations.CreateModel(
            name="PrioritySector",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
            ],
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Name")),
            ],
        ),
        migrations.CreateModel(
            name="SubRegion",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Name")),
            ],
        ),
        migrations.AddField(
            model_name="countrymetadata",
            name="adaptation_priority_sectors",
            field=models.ManyToManyField(blank=True, to="lcc.PrioritySector"),
        ),
        migrations.AddField(
            model_name="countrymetadata",
            name="country",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="metadata",
                to="lcc.Country",
            ),
        ),
        migrations.AddField(
            model_name="countrymetadata",
            name="legal_system",
            field=models.ManyToManyField(to="lcc.LegalSystem"),
        ),
        migrations.AddField(
            model_name="countrymetadata",
            name="mitigation_focus_areas",
            field=models.ManyToManyField(blank=True, to="lcc.FocusArea"),
        ),
        migrations.AddField(
            model_name="countrymetadata",
            name="region",
            field=models.ManyToManyField(to="lcc.Region"),
        ),
        migrations.AddField(
            model_name="countrymetadata",
            name="sub_region",
            field=models.ManyToManyField(to="lcc.SubRegion"),
        ),
        migrations.AddField(
            model_name="countrymetadata",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="lcc.UserProfile",
            ),
        ),
    ]
